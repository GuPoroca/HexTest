// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943

package front

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "github.com/GuPoroca/HexTest/front/components"
import "github.com/GuPoroca/HexTest/pkg/typeDefines"

// Layout defines the main structure of our application.
func Layout(project typeDefines.Project, selectedComponent any) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!doctype html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"/assets/logo.svg\"><title>HexTest</title><script src=\"https://cdn.tailwindcss.com\"></script><!-- HTMX (defer so it's ready when DOM is painted) --><script src=\"https://unpkg.com/htmx.org@1.9.10\" defer></script><style>\n\t\t\t\t/* Optional: smooth open/close for <details> content */\n\t\t\t\t.content-wrapper {\n\t\t\t\t\tdisplay: grid;\n\t\t\t\t\tgrid-template-rows: 0fr; /* collapsed */\n\t\t\t\t\ttransition: grid-template-rows 0.3s ease-out;\n\t\t\t\t}\n\t\t\t\tdetails[open] .content-wrapper {\n\t\t\t\t\tgrid-template-rows: 1fr;\n\t\t\t\t}\n\t\t\t\t.content-wrapper > div { overflow: hidden; }\n\t\t\t</style></head><body class=\"bg-gray-900 text-white\"><div class=\"h-screen flex flex-col\"><header>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.TopActionBar().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</header><div class=\"flex flex-1 overflow-hidden\"><!-- IMPORTANT: id=sidebar for OOB updates --><aside id=\"sidebar\" class=\"w-1/4 bg-gray-800 p-4 overflow-y-auto\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.ProjectSidebar(project).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</aside><!-- IMPORTANT: id=main-content for HTMX targets --><main id=\"main-content\" class=\"flex-1 overflow-y-auto p-6\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.MainContent(selectedComponent).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "</main><!-- Modal mount --><div id=\"modal-root\"></div></div></div></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
